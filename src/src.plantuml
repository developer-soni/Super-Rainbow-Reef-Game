@startuml

title __SRC's Class Diagram__\n

  namespace src {
    class Control {
        - lArrow : int
        - rArrow : int
        + Control()
        + keyPressed()
        + keyReleased()
        + keyTyped()
    }
  }


  namespace src {
    class Game {
        {static} + screenHeight : int
        {static} + screenWidth : int
        - area : BufferedImage
        - bg : BufferedImage
        - bigLeg : BufferedImage
        - bigleg : int
        - bl1 : Image
        - bl2 : Image
        - bl3 : Image
        - bl4 : Image
        - bl5 : Image
        - blL : Image
        - blSolid : Image
        - blocks : ArrayList<Wall>
        - blocksRec : Double
        - borderL : Rectangle
        - borderR : Rectangle
        - borderT : Rectangle
        - br : BufferedReader
        - catchRec : Double
        - g1 : Graphics2D
        - g2 : Graphics2D
        - gameEnd : boolean
        - in : String
        - jf : JFrame
        - katchImg : BufferedImage
        - life : int
        - lvl : int
        - lvlNext : boolean
        - map : InputStream
        - pace : double
        - points : int
        - pointsT : int
        - popImg : BufferedImage
        - popRec : Double
        - wallImg : Image
        + checkCollision()
        + drawBG()
        + drawBlock()
        + drawMap()
        + getBorderL()
        + getBorderR()
        + getBorderT()
        + getLives()
        + getPoints()
        + isGameEnd()
        {static} + main()
        + nextLevel()
        + paintComponent()
        - init()
        - loadObj()
    }
  }
  

  namespace src  {
    abstract class GameObj {
        # h1 : double
        # img : Image
        # w1 : double
        # x : double
        # y : double
        + GameObj()
        + getH1()
        + getW1()
        + getX()
        + getY()
    }
  }
  

  namespace src  {
    class Katch {
        - angle : double
        - img : BufferedImage
        - imgX : double
        - imgY : double
        - lClick : boolean
        - rClick : boolean
        - rad : double
        + Katch()
        + dispRect()
        + draw()
        + update()
        ~ toggleL()
        ~ toggleR()
        ~ unToggleL()
        ~ unToggleR()
        - moveL()
        - moveR()
        - seeBorder()
    }
  }
  

  namespace src  {
    class Pop {
        - angle : double
        - moveX : double
        - moveY : double
        - pace : double
        - reloadAngle : double
        - reloadX : double
        - reloadY : double
        - xDir : double
        - yDir : double
        + Pop()
        + collisionK()
        + collisionX()
        + collisionY()
        + dispRect()
        + draw()
        + getSpeed()
        + incSpeed()
        + reload()
        + revX()
        + revY()
        + update()
    }
  }
  

  namespace src  {
    class Wall {
        - h : double
        - w : double
        - wallType : double
        + Wall()
        + dispRect()
        + draw()
        + getType()
    }
  }
  

  Control .up.|> java.awt.event.KeyListener
  Control o-- Katch : catcher
  Game -up-|> javax.swing.JPanel
  Game o-- Katch : catcher
  Game o-- Control : cntrl
  Game o-- Pop : pop
  Katch -up-|> GameObj
  Pop -up-|> GameObj
  Wall -up-|> GameObj


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
